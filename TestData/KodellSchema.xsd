<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="KodellSchema"
    targetNamespace="http://tempuri.org/KodellSchema.xsd"
    elementFormDefault="qualified"
    xmlns="http://tempuri.org/KodellSchema.xsd"
    xmlns:mstns="http://tempuri.org/KodellSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <xs:annotation>
    <xs:documentation xml:lang="en">
      Copyright 2016 (Inc) Konan Technology. All rights reserved.
    </xs:documentation>
  </xs:annotation>

  <xs:element name="Kodell">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="folder" type="folderType"></xs:element>
        <xs:element name="projects" type="projectListType"></xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="folderType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="folder" type="folderType"></xs:element>
      <xs:element name="project" type="projectRefType"></xs:element>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="projectRefType">
    <xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="projectListType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="project" type="projectType"></xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="projectType">
    <xs:all>
      <xs:element name="description" type="xs:string" minOccurs="0"></xs:element>
      <xs:element name="dataset" type="datasetType" minOccurs="0"></xs:element>
      <xs:element name="network_model" type="networkModelType" minOccurs="0"></xs:element>
      <xs:element name="train" type="trainType" minOccurs="0"></xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
    <xs:attribute name="base" type="xs:string" use="optional"></xs:attribute>
    <xs:attribute name="mode" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="regression"/>
          <xs:enumeration value="binary"/>
          <xs:enumeration value="classify"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="recurrent"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="datasetType">
    <xs:sequence>
      <xs:element name="input" type="datasetInputType" minOccurs="0"></xs:element>
      <xs:element name="output" type="datasetOutputType" minOccurs="0"></xs:element>
      <xs:element name="data" type="datasetDataType" minOccurs="0"></xs:element>
      <xs:element name="split" type="datasetSplitType" minOccurs="0"></xs:element>
    </xs:sequence>
    <xs:attribute name="source" type="xs:string" use="optional"></xs:attribute>
    <xs:attribute name="mode" type="xs:string" use="optional"></xs:attribute>
    <xs:attribute name="sequence" type="datasetSequenceType" use="optional"></xs:attribute>
    <xs:attribute name="evaluate" type="xs:string" use="optional"></xs:attribute>
  </xs:complexType>

  <xs:simpleType name="datasetSequenceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="in-out"/>
      <xs:enumeration value="input"/>
      <xs:enumeration value="output"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="datasetInputType">
    <xs:choice minOccurs="0">
      <xs:element name="vector" type="datasetInputVectorType"></xs:element>
      <xs:element name="grid" type="datasetInputGridType"></xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="datasetInputVectorType">
    <xs:attribute name="size" type="xs:decimal" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="datasetInputGridType">
    <xs:attribute name="width" type="xs:decimal" use="required"></xs:attribute>
    <xs:attribute name="height" type="xs:decimal" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="datasetOutputType">
    <xs:sequence>
      <xs:element name="filter" type="datasetOutputFilterType" minOccurs="0" maxOccurs="unbounded"></xs:element>
      <xs:element name="class" type="datasetOutputClassType" minOccurs="0" maxOccurs="unbounded"></xs:element>
    </xs:sequence>
    <xs:attribute name="size" type="xs:decimal" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="datasetOutputFilterType" mixed="true">
    <xs:attribute name="value" type="xs:string" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="datasetOutputClassType">
    <xs:attribute name="value" type="xs:string" use="required"></xs:attribute>
    <xs:attribute name="index" type="xs:integer" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="datasetDataType">
    <xs:sequence>
      <xs:element name="example" type="xs:string" minOccurs="0" maxOccurs="unbounded"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="datasetSplitType">
    <xs:attribute name="method" type="datasetSplitMethodType" use="required"></xs:attribute>
    <xs:attribute name="test_ratio" type="xs:double" use="required"></xs:attribute>
  </xs:complexType>

  <xs:simpleType name="datasetSplitMethodType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="random_exclusive"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="networkModelType">
    <xs:sequence>
      <xs:element name="layers" type="layersType"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="layersType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="output" type="outputLayerType"></xs:element>
      <xs:element name="full" type="fullConnectionLayerType" minOccurs="0"></xs:element>
      <xs:element name="convolution" type="convolutionLayerType"></xs:element>
      <xs:element name="pooling" type="poolingLayerType"></xs:element>
      <xs:element name="recurrent" type="recurrentLayerType"></xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="outputLayerType" block="extension">
    <xs:sequence>
      <xs:group ref="initParameterGroup"></xs:group>
    </xs:sequence>
    <xs:attributeGroup ref="layerCommonAttr"></xs:attributeGroup>
    <xs:attribute name="cost_func" type="costFuncType" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="fullConnectionLayerType">
    <xs:attributeGroup ref="layerCommonAttr"></xs:attributeGroup>
    <xs:attribute name="depth" type="xs:decimal" default="1"></xs:attribute>
    <xs:attribute name="width" type="xs:decimal" use="required"></xs:attribute>
  </xs:complexType>

  <xs:group name="initParameterGroup">
    <xs:sequence>
      <xs:element name="init" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="weight" type="xs:string"></xs:element>
            <xs:element name="bias" type="xs:string"></xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="convolutionLayerType">
    <xs:attributeGroup ref="layerCommonAttr"></xs:attributeGroup>
    <xs:attribute name="width" type="xs:integer" use="required"></xs:attribute>
    <xs:attribute name="height" type="xs:integer" use="required"></xs:attribute>
    <xs:attribute name="channels" type="xs:integer" use="required"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="poolingLayerType">
    <xs:attribute name="stride" type="xs:integer" use="required"></xs:attribute>
    <xs:attribute name="func" type="poolingFuncType" use="required"></xs:attribute>
    <xs:attribute name="act_func" type="activateFuncType" default="bypass"></xs:attribute>
  </xs:complexType>

  <xs:complexType name="recurrentLayerType">
    <xs:attribute name="width" type="xs:integer" use="required"></xs:attribute>
    <xs:attribute name="act_func" type="activateFuncType" default="bypass"></xs:attribute>
    <xs:attribute name="bias" type="biasType" default="each"></xs:attribute>
  </xs:complexType>

  <xs:attributeGroup name="layerCommonAttr">
    <xs:attribute name="act_func" type="activateFuncType" default="bypass"></xs:attribute>
    <xs:attribute name="bias" type="biasType" default="each"></xs:attribute>
  </xs:attributeGroup>

  <xs:simpleType name="costFuncType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="mse"/>
      <xs:enumeration value="cross_entropy"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="activateFuncType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bypass"/>
      <xs:enumeration value="sigmoid"/>
      <xs:enumeration value="tanh"/>
      <xs:enumeration value="relu"/>
      <xs:enumeration value="softmax"/>
      <xs:enumeration value="max"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="poolingFuncType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="max"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="biasType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="on"/>
      <xs:enumeration value="off"/>
      <xs:enumeration value="common"/>
      <xs:enumeration value="each"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="trainType">
    <xs:sequence>
      <xs:element name="minibatch" type="minibatchType"></xs:element>
      <xs:element name="regular" type="regularType" minOccurs="0" maxOccurs="unbounded"></xs:element>
      <xs:element name="report" type="reportType" minOccurs="0" maxOccurs="unbounded"></xs:element>
      <xs:element name="test" type="testType"></xs:element>
    </xs:sequence>
    <xs:attribute name="method" type="trainMethodType" use="required"></xs:attribute>
    <xs:attribute name="iterate" type="xs:double" use="required"></xs:attribute>
    <xs:attribute name="rate" type="xs:double" use="required"></xs:attribute>
  </xs:complexType>

  <xs:simpleType name="trainMethodType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="sg"/>
      <xs:enumeration value="sgd"/>
      <xs:enumeration value="sgd-nm"/>
      <xs:enumeration value="rmsprop"/>
      <xs:enumeration value="rmsprop-nm"/>
      <xs:enumeration value="adagrad"/>
      <xs:enumeration value="adagraddelta"/>
      <xs:enumeration value="adam"/>
      <xs:enumeration value="newton"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="minibatchType">
    <xs:attribute name="type" type="minibatchTypeType" use="required"></xs:attribute>
    <xs:attribute name="size" type="xs:integer" use="optional"></xs:attribute>
  </xs:complexType>

  <xs:simpleType name="minibatchTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="random"/>
      <xs:enumeration value="sequential"/>
      <xs:enumeration value="all"/>
      <xs:enumeration value="unique"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="regularType">
    <xs:attribute name="type" type="regularTypeType" default="norm2_decay"></xs:attribute>
    <xs:attribute name="dest" type="regularDestType" use="optional"></xs:attribute>
    <xs:attribute name="ratio" type="xs:double" use="required"></xs:attribute>
  </xs:complexType>

  <xs:simpleType name="regularTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="norm1_decay"/>
      <xs:enumeration value="norm2_decay"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="regularDestType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="reportType">
    <xs:sequence>
      <xs:element name="range" type="reportRangeType" minOccurs="0" maxOccurs="unbounded"></xs:element>
    </xs:sequence>
    <xs:attribute name="type" type="reportTypeType" use="optional"></xs:attribute>
    <xs:attribute name="poslist" type="trainEventListType" use="optional"></xs:attribute>
    <xs:attribute name="neglist" type="trainEventListType" use="optional"></xs:attribute>
    <xs:attribute name="dest" type="reportDestType" use="optional" default="file"></xs:attribute>
    <xs:attribute name="path" type="xs:string" use="optional"></xs:attribute>
    <xs:attributeGroup ref="reportRangeAttrs"></xs:attributeGroup>
  </xs:complexType>

  <xs:complexType name="reportRangeType">
    <xs:attributeGroup ref="reportRangeAttrs"></xs:attributeGroup>
  </xs:complexType>

  <xs:attributeGroup name="reportRangeAttrs">
    <xs:attribute name="from" type="xs:decimal" use="optional"></xs:attribute>
    <xs:attribute name="to" type="xs:decimal" use="optional"></xs:attribute>
    <xs:attribute name="period" type="xs:decimal" use="optional"></xs:attribute>
    <xs:attribute name="offset" type="xs:decimal" use="optional"></xs:attribute>
  </xs:attributeGroup>

  <xs:simpleType name="reportTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="full"/>
      <xs:enumeration value="brief"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="reportDestType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="file"/>
      <xs:enumeration value="stdout"/>
      <xs:enumeration value="callback"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="trainEventListType">
    <xs:list itemType="trainEventType"></xs:list>
  </xs:simpleType>

  <xs:simpleType name="trainEventType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="train"/>
      <xs:enumeration value="train_start"/>
      <xs:enumeration value="train_exit"/>
      <xs:enumeration value="train_end"/>
      <xs:enumeration value="step"/>
      <xs:enumeration value="step_start"/>
      <xs:enumeration value="step_end"/>
      <xs:enumeration value="minibatch"/>
      <xs:enumeration value="minibatch_select"/>
      <xs:enumeration value="minibatch_vomit"/>
      <xs:enumeration value="example"/>
      <xs:enumeration value="evaluate"/>
      <xs:enumeration value="linear"/>
      <xs:enumeration value="activate"/>
      <xs:enumeration value="cost"/>
      <xs:enumeration value="cost_avg"/>
      <xs:enumeration value="grad"/>
      <xs:enumeration value="delta"/>
      <xs:enumeration value="grad_delta"/>
      <xs:enumeration value="bias_delta"/>
      <xs:enumeration value="input_delta"/>
      <xs:enumeration value="feed"/>
      <xs:enumeration value="feed_setting"/>
      <xs:enumeration value="feed_weight"/>
      <xs:enumeration value="feed_bias"/>
      <xs:enumeration value="final"/>
      <xs:enumeration value="result"/>
      <xs:enumeration value="test"/>
      <xs:enumeration value="test_start"/>
      <xs:enumeration value="test_case"/>
      <xs:enumeration value="test_result"/>
      <xs:enumeration value="debug"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="testType">
    <xs:sequence>
      <xs:element name="validate" type="validateType" minOccurs="0"></xs:element>
    </xs:sequence>
    <xs:attributeGroup ref="testTargetAttrs"></xs:attributeGroup>
  </xs:complexType>

  <xs:complexType name="validateType">
    <xs:attribute name="period" type="xs:integer" use="required"></xs:attribute>
    <xs:attributeGroup ref="testTargetAttrs"></xs:attributeGroup>
  </xs:complexType>

  <xs:attributeGroup name="testTargetAttrs">
    <xs:attribute name="trainset" type="xs:integer" use="optional"></xs:attribute>
    <xs:attribute name="testset" type="xs:integer" use="optional"></xs:attribute>
  </xs:attributeGroup>

  <xs:simpleType name="validateTestSetType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="allset"/>
      <xs:enumeration value="trainset"/>
      <xs:enumeration value="testset"/>
      <xs:enumeration value="valiadateset"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
